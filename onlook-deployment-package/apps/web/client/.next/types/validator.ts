// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/about/page.tsx
{
  const handler = {} as typeof import("../../src/app/about/page.js")
  handler satisfies AppPageConfig<"/about">
}

// Validate ../../src/app/auth/redirect/page.tsx
{
  const handler = {} as typeof import("../../src/app/auth/redirect/page.js")
  handler satisfies AppPageConfig<"/auth/redirect">
}

// Validate ../../src/app/callback/stripe/cancel/page.tsx
{
  const handler = {} as typeof import("../../src/app/callback/stripe/cancel/page.js")
  handler satisfies AppPageConfig<"/callback/stripe/cancel">
}

// Validate ../../src/app/callback/stripe/success/page.tsx
{
  const handler = {} as typeof import("../../src/app/callback/stripe/success/page.js")
  handler satisfies AppPageConfig<"/callback/stripe/success">
}

// Validate ../../src/app/debug/page.tsx
{
  const handler = {} as typeof import("../../src/app/debug/page.js")
  handler satisfies AppPageConfig<"/debug">
}

// Validate ../../src/app/faq/page.tsx
{
  const handler = {} as typeof import("../../src/app/faq/page.js")
  handler satisfies AppPageConfig<"/faq">
}

// Validate ../../src/app/features/ai/page.tsx
{
  const handler = {} as typeof import("../../src/app/features/ai/page.js")
  handler satisfies AppPageConfig<"/features/ai">
}

// Validate ../../src/app/features/builder/page.tsx
{
  const handler = {} as typeof import("../../src/app/features/builder/page.js")
  handler satisfies AppPageConfig<"/features/builder">
}

// Validate ../../src/app/features/page.tsx
{
  const handler = {} as typeof import("../../src/app/features/page.js")
  handler satisfies AppPageConfig<"/features">
}

// Validate ../../src/app/features/prototype/page.tsx
{
  const handler = {} as typeof import("../../src/app/features/prototype/page.js")
  handler satisfies AppPageConfig<"/features/prototype">
}

// Validate ../../src/app/invitation/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/invitation/[id]/page.js")
  handler satisfies AppPageConfig<"/invitation/[id]">
}

// Validate ../../src/app/login/page.tsx
{
  const handler = {} as typeof import("../../src/app/login/page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/pricing/page.tsx
{
  const handler = {} as typeof import("../../src/app/pricing/page.js")
  handler satisfies AppPageConfig<"/pricing">
}

// Validate ../../src/app/privacy-policy/page.tsx
{
  const handler = {} as typeof import("../../src/app/privacy-policy/page.js")
  handler satisfies AppPageConfig<"/privacy-policy">
}

// Validate ../../src/app/project/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/project/[id]/page.js")
  handler satisfies AppPageConfig<"/project/[id]">
}

// Validate ../../src/app/project/page.tsx
{
  const handler = {} as typeof import("../../src/app/project/page.js")
  handler satisfies AppPageConfig<"/project">
}

// Validate ../../src/app/projects/import/github/page.tsx
{
  const handler = {} as typeof import("../../src/app/projects/import/github/page.js")
  handler satisfies AppPageConfig<"/projects/import/github">
}

// Validate ../../src/app/projects/import/local/page.tsx
{
  const handler = {} as typeof import("../../src/app/projects/import/local/page.js")
  handler satisfies AppPageConfig<"/projects/import/local">
}

// Validate ../../src/app/projects/import/page.tsx
{
  const handler = {} as typeof import("../../src/app/projects/import/page.js")
  handler satisfies AppPageConfig<"/projects/import">
}

// Validate ../../src/app/projects/page.tsx
{
  const handler = {} as typeof import("../../src/app/projects/page.js")
  handler satisfies AppPageConfig<"/projects">
}

// Validate ../../src/app/sitemap/page.tsx
{
  const handler = {} as typeof import("../../src/app/sitemap/page.js")
  handler satisfies AppPageConfig<"/sitemap">
}

// Validate ../../src/app/terms-of-service/page.tsx
{
  const handler = {} as typeof import("../../src/app/terms-of-service/page.js")
  handler satisfies AppPageConfig<"/terms-of-service">
}

// Validate ../../src/app/api/chat/route.ts
{
  const handler = {} as typeof import("../../src/app/api/chat/route.js")
  handler satisfies RouteHandlerConfig<"/api/chat">
}

// Validate ../../src/app/api/health/route.ts
{
  const handler = {} as typeof import("../../src/app/api/health/route.js")
  handler satisfies RouteHandlerConfig<"/api/health">
}

// Validate ../../src/app/api/test/route.ts
{
  const handler = {} as typeof import("../../src/app/api/test/route.js")
  handler satisfies RouteHandlerConfig<"/api/test">
}

// Validate ../../src/app/api/trpc/[trpc]/route.ts
{
  const handler = {} as typeof import("../../src/app/api/trpc/[trpc]/route.js")
  handler satisfies RouteHandlerConfig<"/api/trpc/[trpc]">
}

// Validate ../../src/app/auth/callback/route.ts
{
  const handler = {} as typeof import("../../src/app/auth/callback/route.js")
  handler satisfies RouteHandlerConfig<"/auth/callback">
}

// Validate ../../src/app/webhook/stripe/route.ts
{
  const handler = {} as typeof import("../../src/app/webhook/stripe/route.js")
  handler satisfies RouteHandlerConfig<"/webhook/stripe">
}





// Validate ../../src/app/invitation/[id]/layout.tsx
{
  const handler = {} as typeof import("../../src/app/invitation/[id]/layout.js")
  handler satisfies LayoutConfig<"/invitation/[id]">
}

// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ../../src/app/project/[id]/layout.tsx
{
  const handler = {} as typeof import("../../src/app/project/[id]/layout.js")
  handler satisfies LayoutConfig<"/project/[id]">
}

// Validate ../../src/app/project/layout.tsx
{
  const handler = {} as typeof import("../../src/app/project/layout.js")
  handler satisfies LayoutConfig<"/project">
}

// Validate ../../src/app/projects/import/github/layout.tsx
{
  const handler = {} as typeof import("../../src/app/projects/import/github/layout.js")
  handler satisfies LayoutConfig<"/projects/import/github">
}

// Validate ../../src/app/projects/import/layout.tsx
{
  const handler = {} as typeof import("../../src/app/projects/import/layout.js")
  handler satisfies LayoutConfig<"/projects/import">
}

// Validate ../../src/app/projects/import/local/layout.tsx
{
  const handler = {} as typeof import("../../src/app/projects/import/local/layout.js")
  handler satisfies LayoutConfig<"/projects/import/local">
}

// Validate ../../src/app/projects/layout.tsx
{
  const handler = {} as typeof import("../../src/app/projects/layout.js")
  handler satisfies LayoutConfig<"/projects">
}
